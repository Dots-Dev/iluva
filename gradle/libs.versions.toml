[versions]
arrow = "1.2.1"
bcrypt = "0.10.2"
cohort = "2.3.1"
exposed = "0.48.0"
flyway = "10.10.0"
hikari = "5.1.0"
hoplite = "2.7.5"
jsonSchemaSerialization = "0.6.6"
kodein = "7.21.1"
kotestGradle = "0.4.11"
kotest = "5.8.1"
kotestKtor = "2.0.0"
kotestContainer = "2.0.2"
kotlin = "1.9.23"
ksp = "1.9.23-1.0.19"
ktor = "2.3.9"
logback = "1.4.14"
pgsql = "42.7.3"
suspendapp = "0.4.0"
swagger = "2.7.5"
thing = "0.0.8"
testContainersPgsql = "1.19.7"

[libraries]
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-suspendapp = { module = "io.arrow-kt:suspendapp", version.ref = "suspendapp" }
arrow-suspendapp-ktor = { module = "io.arrow-kt:suspendapp", version.ref = "suspendapp" }
bcrypt = { module = "at.favre.lib:bcrypt", version.ref = "bcrypt" }
cohort-core = { module = "com.sksamuel.cohort:cohort-core", version.ref = "cohort" }
cohort-hikari = { module = "com.sksamuel.cohort:cohort-hikari", version.ref = "cohort" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-crypt = { module = "org.jetbrains.exposed:exposed-crypt", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-pgsql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
json-schema-serialization = { module = "com.github.Ricky12Awesome:json-schema-serialization", version.ref = "jsonSchemaSerialization" }
kodein = { module = "org.kodein.di:kodein-di", version.ref = "kodein" }
kodein-ktor-server-controller-jvm = { module = "org.kodein.di:kodein-di-framework-ktor-server-controller-jvm", version.ref = "kodein" }
kodein-ktor-server-jvm = { module = "org.kodein.di:kodein-di-framework-ktor-server-jvm", version.ref = "kodein" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-assertions-ktor = { module = "io.kotest.extensions:kotest-assertions-ktor", version.ref = "kotestKtor" }
kotest-extensions-test-containers = { module = "io.kotest.extensions:kotest-extensions-testcontainers", version.ref = "kotestContainer" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-auth-jvm = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt-jvm = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-cio-jvm = { module = "io.ktor:ktor-server-cio-jvm", version.ref = "ktor" }
ktor-server-config-yaml-jvm = { module = "io.ktor:ktor-server-config-yaml-jvm", version.ref = "ktor" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-cors-jvm = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-resources-jvm = { module = "io.ktor:ktor-server-resources", version.ref = "ktor" }
ktor-server-status-pages-jvm = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-swagger-ui = { module = "io.github.smiley4:ktor-swagger-ui", version.ref = "swagger" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "pgsql" }
thing = { module = "so.kciter:thing", version.ref = "thing" }
test-containers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testContainersPgsql" }

# include build dependencies for build-logic
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ktor-gradlePlugin = { module = "io.ktor.plugin:plugin", version.ref = "ktor" }

[bundles]
exposed = ["exposed-core", "exposed-crypt", "exposed-dao", "exposed-jdbc", "exposed-kotlin-datetime"]
kotest = ["kotest-assertions-core", "kotest-assertions-ktor", "kotest-property", "kotest-runner-junit5"]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotest = {id = "io.kotest", version.ref = "kotestGradle"}

# plugins from build-logic
iluva-api = { id = "iluva.api", version = "unspecified" }
iluva-test = { id = "iluva.test", version = "unspecified" }